{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport * as ReactDOM from 'react-dom/client'; // import {createStore, applyMiddleware} from 'redux';\n// import {Provider} from 'react-redux'\n\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App'; // import reducers from './reducers';\n\nimport * as serviceWorker from './serviceWorker';\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}))); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); // const CallMiddleware = store => nextMiddle => action => {\n//     console.log('1. reducer 전');\n//     console.log('2. action.type:' + action.type+', store str: '+store.getState().data.str);\n//     let result = nextMiddle(action);\n//     console.log('3. reducer 후');\n//     console.log('4. action.typr: '+action.type+', store str: '+store.getState().data.str);\n//     return result;\n// }\n// const store = createStore(reducers, applyMiddleware(CallMiddleware));\n// const listener = () => {\n//     ReactDOM.render(\n//         <Provider store={store}>\n//             <App indexProp=\"react\"/>\n//         </Provider>,\n//         document.getElementById('root')\n//     );\n// };\n// store.subscribe(listener);\n// listener();","map":{"version":3,"sources":["C:/workspace/react/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","App","serviceWorker","root","createRoot","document","getElementById","render","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B,C,CACA;AACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,E,CAME;AACA;AACA;;AACAL,aAAa,CAACM,UAAd,G,CAEF;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from 'react';\r\nimport * as ReactDOM from 'react-dom/client';\r\n// import {createStore, applyMiddleware} from 'redux';\r\n// import {Provider} from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n// import reducers from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n  \r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: https://bit.ly/CRA-PWA\r\n  serviceWorker.unregister();\r\n\r\n// const CallMiddleware = store => nextMiddle => action => {\r\n//     console.log('1. reducer 전');\r\n//     console.log('2. action.type:' + action.type+', store str: '+store.getState().data.str);\r\n\r\n//     let result = nextMiddle(action);\r\n//     console.log('3. reducer 후');\r\n//     console.log('4. action.typr: '+action.type+', store str: '+store.getState().data.str);\r\n\r\n//     return result;\r\n// }\r\n\r\n// const store = createStore(reducers, applyMiddleware(CallMiddleware));\r\n\r\n// const listener = () => {\r\n//     ReactDOM.render(\r\n//         <Provider store={store}>\r\n//             <App indexProp=\"react\"/>\r\n//         </Provider>,\r\n//         document.getElementById('root')\r\n//     );\r\n// };\r\n\r\n// store.subscribe(listener);\r\n// listener();"]},"metadata":{},"sourceType":"module"}