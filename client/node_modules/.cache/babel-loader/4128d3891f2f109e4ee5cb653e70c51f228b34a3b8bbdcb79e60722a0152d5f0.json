{"ast":null,"code":"import { ADD } from '../actions';\nimport { combineReducers } from 'redux';\nconst initState = {\n  str: 'react'\n};\nconst data = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD:\n      return state, {\n        str: state.str + '200'\n      };\n    default:\n      return state;\n  }\n};\nconst App = combineReducers({\n  data\n});\nexport default App;","map":{"version":3,"names":["ADD","combineReducers","initState","str","data","state","action","type","App"],"sources":["C:/workspace/react/client/src/reducers/index.js"],"sourcesContent":["import {ADD} from '../actions'\nimport {combineReducers} from 'redux'\n\nconst initState = {\n    str: 'react',\n};\n\nconst data = (state = initState, action) => {\n    switch (action.type) {\n        case ADD:\n            return state, {\n                str: state.str + '200'\n            };\n        default:\n            return state;\n    }\n};\n\nconst App = combineReducers({\n    data\n});\n\nexport default App;"],"mappings":"AAAA,SAAQA,GAAG,QAAO,YAAY;AAC9B,SAAQC,eAAe,QAAO,OAAO;AAErC,MAAMC,SAAS,GAAG;EACdC,GAAG,EAAE;AACT,CAAC;AAED,MAAMC,IAAI,GAAG,YAA+B;EAAA,IAA9BC,KAAK,uEAAGH,SAAS;EAAA,IAAEI,MAAM;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,GAAG;MACJ,OAAOK,KAAK,EAAE;QACVF,GAAG,EAAEE,KAAK,CAACF,GAAG,GAAG;MACrB,CAAC;IACL;MACI,OAAOE,KAAK;EAAC;AAEzB,CAAC;AAED,MAAMG,GAAG,GAAGP,eAAe,CAAC;EACxBG;AACJ,CAAC,CAAC;AAEF,eAAeI,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}